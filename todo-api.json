{
  "openapi": "3.1.0",
  "info": {
    "title": "My Todo API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "space",
      "description": "Space operations"
    },
    {
      "name": "spaceUser",
      "description": "SpaceUser operations"
    },
    {
      "name": "user",
      "description": "User operations"
    },
    {
      "name": "list",
      "description": "List operations"
    },
    {
      "name": "todo",
      "description": "Todo operations"
    }
  ],
  "components": {
    "schemas": {
      "SpaceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "ownerId"
        ]
      },
      "SpaceUserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "userId",
          "role"
        ]
      },
      "UserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "email",
          "password",
          "name"
        ]
      },
      "ListScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "ownerId",
          "title",
          "private"
        ]
      },
      "TodoScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "ownerId",
          "listId",
          "title",
          "completedAt"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "NullsOrder": {
        "type": "string",
        "enum": [
          "first",
          "last"
        ]
      },
      "Space": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "ownerId": {
            "type": "integer"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUser"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "owner",
          "ownerId"
        ]
      },
      "SpaceUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "spaceId": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "space",
          "spaceId",
          "user",
          "userId",
          "role"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUser"
            }
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List"
            }
          },
          "todos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Todo"
            }
          },
          "ownedSpaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "email"
        ]
      },
      "List": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "spaceId": {
            "type": "integer"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "todos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Todo"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "space",
          "spaceId",
          "owner",
          "ownerId",
          "title",
          "private"
        ]
      },
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "ownerId": {
            "type": "integer"
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "listId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "owner",
          "ownerId",
          "list",
          "listId",
          "title"
        ]
      },
      "SpaceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserListRelationFilter"
          },
          "lists": {
            "$ref": "#/components/schemas/ListListRelationFilter"
          }
        }
      },
      "SpaceOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "slug": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "ownerId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "owner": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserOrderByRelationAggregateInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListOrderByRelationAggregateInput"
          }
        }
      },
      "SpaceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "slug": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserListRelationFilter"
          },
          "lists": {
            "$ref": "#/components/schemas/ListListRelationFilter"
          }
        }
      },
      "SpaceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceUserWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "space": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "SpaceUserOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "spaceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "role": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceOrderByWithRelationInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          }
        }
      },
      "SpaceUserWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId_spaceId": {
            "$ref": "#/components/schemas/SpaceUserUserIdSpaceIdCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "space": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "SpaceUserScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserListRelationFilter"
          },
          "lists": {
            "$ref": "#/components/schemas/ListListRelationFilter"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoListRelationFilter"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceListRelationFilter"
          }
        }
      },
      "UserOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserOrderByRelationAggregateInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListOrderByRelationAggregateInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoOrderByRelationAggregateInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceOrderByRelationAggregateInput"
          }
        }
      },
      "UserWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserListRelationFilter"
          },
          "lists": {
            "$ref": "#/components/schemas/ListListRelationFilter"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoListRelationFilter"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceListRelationFilter"
          }
        }
      },
      "UserScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "ListWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "space": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "todos": {
            "$ref": "#/components/schemas/TodoListRelationFilter"
          }
        }
      },
      "ListOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "spaceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "ownerId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "private": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceOrderByWithRelationInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoOrderByRelationAggregateInput"
          }
        }
      },
      "ListWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "space": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SpaceWhereInput"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "todos": {
            "$ref": "#/components/schemas/TodoListRelationFilter"
          }
        }
      },
      "ListScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "TodoWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "list": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ListWhereInput"
              }
            ]
          }
        }
      },
      "TodoOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "ownerId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "listId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "list": {
            "$ref": "#/components/schemas/ListOrderByWithRelationInput"
          }
        }
      },
      "TodoWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "list": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ListWhereInput"
              }
            ]
          }
        }
      },
      "TodoScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SpaceCreateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedSpacesInput"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutSpaceInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug",
          "owner"
        ]
      },
      "SpaceUpdateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedSpacesNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutSpaceNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "SpaceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SpaceUserCreateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceCreateNestedOneWithoutMembersInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutSpacesInput"
          }
        },
        "required": [
          "space",
          "user"
        ]
      },
      "SpaceUserUpdateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "space": {
            "$ref": "#/components/schemas/SpaceUpdateOneRequiredWithoutMembersNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutSpacesNestedInput"
          }
        }
      },
      "SpaceUserUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserCreateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "ListCreateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutListsInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutListInput"
          }
        },
        "required": [
          "title",
          "space",
          "owner"
        ]
      },
      "ListUpdateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "space": {
            "$ref": "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
          }
        }
      },
      "ListUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TodoCreateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
          },
          "list": {
            "$ref": "#/components/schemas/ListCreateNestedOneWithoutTodosInput"
          }
        },
        "required": [
          "title",
          "owner",
          "list"
        ]
      },
      "TodoUpdateInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
          },
          "list": {
            "$ref": "#/components/schemas/ListUpdateOneRequiredWithoutTodosNestedInput"
          }
        }
      },
      "TodoUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "IntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "DateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "UserRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "SpaceUserListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          }
        }
      },
      "ListListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ListWhereInput"
          }
        }
      },
      "SpaceUserOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ListOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "IntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "DateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "StringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "SpaceRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          }
        }
      },
      "SpaceUserUserIdSpaceIdCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          },
          "spaceId": {
            "type": "integer"
          }
        },
        "required": [
          "userId",
          "spaceId"
        ]
      },
      "StringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "TodoListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/TodoWhereInput"
          }
        }
      },
      "SpaceListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          }
        }
      },
      "SortOrderInput": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "nulls": {
            "$ref": "#/components/schemas/NullsOrder"
          }
        },
        "required": [
          "sort"
        ]
      },
      "TodoOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "SpaceOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "StringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "BoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "BoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "DateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "ListRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ListWhereInput"
          }
        }
      },
      "DateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "UserCreateNestedOneWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedSpacesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutOwnedSpacesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "SpaceUserCreateNestedManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ListCreateNestedManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUserUncheckedCreateNestedManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ListUncheckedCreateNestedManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "DateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        }
      },
      "UserUpdateOneRequiredWithoutOwnedSpacesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedSpacesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutOwnedSpacesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutOwnedSpacesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedSpacesInput"
              }
            ]
          }
        }
      },
      "SpaceUserUpdateManyWithoutSpaceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ListUpdateManyWithoutSpaceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "IntFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "integer"
          },
          "increment": {
            "type": "integer"
          },
          "decrement": {
            "type": "integer"
          },
          "multiply": {
            "type": "integer"
          },
          "divide": {
            "type": "integer"
          }
        }
      },
      "SpaceUserUncheckedUpdateManyWithoutSpaceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ListUncheckedUpdateManyWithoutSpaceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SpaceCreateNestedOneWithoutMembersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutSpacesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "SpaceUpdateOneRequiredWithoutMembersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutMembersInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SpaceUpsertWithoutMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateToOneWithWhereWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutSpacesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutSpacesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutSpacesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
              }
            ]
          }
        }
      },
      "SpaceUserCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ListCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TodoCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SpaceCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUserUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ListUncheckedCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TodoUncheckedCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUncheckedCreateNestedManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "NullableStringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SpaceUserUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ListUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TodoUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUserUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ListUncheckedUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TodoUncheckedUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SpaceUncheckedUpdateManyWithoutOwnerNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
                }
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutOwnerInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpsertWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpsertWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithWhereUniqueWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpdateWithWhereUniqueWithoutOwnerInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateManyWithWhereWithoutOwnerInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUpdateManyWithWhereWithoutOwnerInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SpaceCreateNestedOneWithoutListsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutListsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutListsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutListsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "TodoCreateNestedManyWithoutListInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutListInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "TodoUncheckedCreateNestedManyWithoutListInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutListInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BoolFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        }
      },
      "SpaceUpdateOneRequiredWithoutListsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SpaceCreateOrConnectWithoutListsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SpaceUpsertWithoutListsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateToOneWithWhereWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutListsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutListsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutListsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
              }
            ]
          }
        }
      },
      "TodoUpdateManyWithoutListNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutListInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "TodoUncheckedUpdateManyWithoutListNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateWithoutListInput"
                }
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoCreateOrConnectWithoutListInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutTodosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ListCreateNestedOneWithoutTodosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ListCreateOrConnectWithoutTodosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          }
        }
      },
      "NullableDateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutTodosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutTodosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
              }
            ]
          }
        }
      },
      "ListUpdateOneRequiredWithoutTodosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ListCreateOrConnectWithoutTodosInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ListUpsertWithoutTodosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateToOneWithWhereWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
              }
            ]
          }
        }
      },
      "NestedIntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "NestedStringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "NestedIntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "NestedFloatFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "NestedStringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "NestedStringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedStringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "NestedIntNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            ]
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedBoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "NestedBoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "NestedDateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "NestedDateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "in": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "notIn": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            ]
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "UserCreateWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserUncheckedCreateWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserCreateOrConnectWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedSpacesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SpaceUserCreateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutSpacesInput"
          }
        },
        "required": [
          "user"
        ]
      },
      "SpaceUserUncheckedCreateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "userId"
        ]
      },
      "SpaceUserCreateOrConnectWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ListCreateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutListsInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutListInput"
          }
        },
        "required": [
          "title",
          "owner"
        ]
      },
      "ListUncheckedCreateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedCreateNestedManyWithoutListInput"
          }
        },
        "required": [
          "ownerId",
          "title"
        ]
      },
      "ListCreateOrConnectWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedSpacesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutOwnedSpacesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutOwnedSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutOwnedSpacesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutOwnedSpacesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "SpaceUserUpsertWithWhereUniqueWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateWithoutSpaceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SpaceUserUpdateWithWhereUniqueWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SpaceUserUpdateManyWithWhereWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SpaceUserScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ListUpsertWithWhereUniqueWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutSpaceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ListUpdateWithWhereUniqueWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutSpaceInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ListUpdateManyWithWhereWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutSpaceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ListScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "SpaceCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedSpacesInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug",
          "owner"
        ]
      },
      "SpaceUncheckedCreateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug",
          "ownerId"
        ]
      },
      "SpaceCreateOrConnectWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserUncheckedCreateWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserCreateOrConnectWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SpaceUpsertWithoutMembersInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SpaceUpdateToOneWithWhereWithoutMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutMembersInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SpaceUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedSpacesNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "SpaceUncheckedUpdateWithoutMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "UserUpsertWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSpacesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutSpacesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "SpaceUserCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceCreateNestedOneWithoutMembersInput"
          }
        },
        "required": [
          "space"
        ]
      },
      "SpaceUserUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spaceId": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "spaceId"
        ]
      },
      "SpaceUserCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ListCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutListInput"
          }
        },
        "required": [
          "title",
          "space"
        ]
      },
      "ListUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spaceId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedCreateNestedManyWithoutListInput"
          }
        },
        "required": [
          "spaceId",
          "title"
        ]
      },
      "ListCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "TodoCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "list": {
            "$ref": "#/components/schemas/ListCreateNestedOneWithoutTodosInput"
          }
        },
        "required": [
          "title",
          "list"
        ]
      },
      "TodoUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "listId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "listId",
          "title"
        ]
      },
      "TodoCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SpaceCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutSpaceInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "SpaceUncheckedCreateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutSpaceInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "SpaceCreateOrConnectWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SpaceUserUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SpaceUserUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SpaceUserUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUserUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ListUpsertWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ListUpdateWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ListUpdateManyWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TodoUpsertWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "TodoUpdateWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TodoUpdateManyWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TodoScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TodoScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TodoScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SpaceUpsertWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutOwnerInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SpaceUpdateWithWhereUniqueWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutOwnerInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SpaceUpdateManyWithWhereWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateManyWithoutOwnerInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SpaceScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpaceScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceCreateWithoutListsInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutOwnedSpacesInput"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug",
          "owner"
        ]
      },
      "SpaceUncheckedCreateWithoutListsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutSpaceInput"
          }
        },
        "required": [
          "name",
          "slug",
          "ownerId"
        ]
      },
      "SpaceCreateOrConnectWithoutListsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutListsInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserUncheckedCreateWithoutListsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserCreateOrConnectWithoutListsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutListsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "TodoCreateWithoutListInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
          }
        },
        "required": [
          "title",
          "owner"
        ]
      },
      "TodoUncheckedCreateWithoutListInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        },
        "required": [
          "ownerId",
          "title"
        ]
      },
      "TodoCreateOrConnectWithoutListInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SpaceUpsertWithoutListsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SpaceUpdateToOneWithWhereWithoutListsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SpaceUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SpaceUpdateWithoutListsInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutOwnedSpacesNestedInput"
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "SpaceUncheckedUpdateWithoutListsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "UserUpsertWithoutListsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutListsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutListsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutListsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutListsInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutListsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "TodoUpsertWithWhereUniqueWithoutListInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithoutListInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateWithoutListInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoCreateWithoutListInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedCreateWithoutListInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "TodoUpdateWithWhereUniqueWithoutListInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateWithoutListInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateWithoutListInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "TodoUpdateManyWithWhereWithoutListInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TodoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutListInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserCreateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserUncheckedCreateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedCreateNestedManyWithoutOwnerInput"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserCreateOrConnectWithoutTodosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ListCreateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutListsInput"
          }
        },
        "required": [
          "title",
          "space",
          "owner"
        ]
      },
      "ListUncheckedCreateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spaceId": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          }
        },
        "required": [
          "spaceId",
          "ownerId",
          "title"
        ]
      },
      "ListCreateOrConnectWithoutTodosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutTodosInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutTodosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "spaces": {
            "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
          },
          "ownedSpaces": {
            "$ref": "#/components/schemas/SpaceUncheckedUpdateManyWithoutOwnerNestedInput"
          }
        }
      },
      "ListUpsertWithoutTodosInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListCreateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ListUpdateToOneWithWhereWithoutTodosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListUpdateWithoutTodosInput"
              },
              {
                "$ref": "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ListUpdateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "space": {
            "$ref": "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
          }
        }
      },
      "ListUncheckedUpdateWithoutTodosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SpaceUserUpdateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutSpacesNestedInput"
          }
        }
      },
      "SpaceUserUncheckedUpdateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SpaceUserUncheckedUpdateManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ListUpdateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
          }
        }
      },
      "ListUncheckedUpdateWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutListNestedInput"
          }
        }
      },
      "ListUncheckedUpdateManyWithoutSpaceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SpaceUserUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "space": {
            "$ref": "#/components/schemas/SpaceUpdateOneRequiredWithoutMembersNestedInput"
          }
        }
      },
      "SpaceUserUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SpaceUserUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ListUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "space": {
            "$ref": "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
          }
        }
      },
      "ListUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "todos": {
            "$ref": "#/components/schemas/TodoUncheckedUpdateManyWithoutListNestedInput"
          }
        }
      },
      "ListUncheckedUpdateManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TodoUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "list": {
            "$ref": "#/components/schemas/ListUpdateOneRequiredWithoutTodosNestedInput"
          }
        }
      },
      "TodoUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "TodoUncheckedUpdateManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SpaceUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyWithoutSpaceNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "SpaceUncheckedUpdateWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "members": {
            "$ref": "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutSpaceNestedInput"
          },
          "lists": {
            "$ref": "#/components/schemas/ListUncheckedUpdateManyWithoutSpaceNestedInput"
          }
        }
      },
      "SpaceUncheckedUpdateManyWithoutOwnerInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "TodoUpdateWithoutListInput": {
        "type": "object",
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
          }
        }
      },
      "TodoUncheckedUpdateWithoutListInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "TodoUncheckedUpdateManyWithoutListInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "SpaceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          }
        }
      },
      "UserArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          }
        }
      },
      "ListArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          }
        }
      },
      "SpaceInclude": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserFindManyArgs"
              }
            ]
          },
          "lists": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "SpaceUserInclude": {
        "type": "object",
        "properties": {
          "space": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceArgs"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "UserInclude": {
        "type": "object",
        "properties": {
          "spaces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserFindManyArgs"
              }
            ]
          },
          "lists": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListFindManyArgs"
              }
            ]
          },
          "todos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoFindManyArgs"
              }
            ]
          },
          "ownedSpaces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ListInclude": {
        "type": "object",
        "properties": {
          "space": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceArgs"
              }
            ]
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "todos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "TodoInclude": {
        "type": "object",
        "properties": {
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "list": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListArgs"
              }
            ]
          }
        }
      },
      "SpaceCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "members": {
            "type": "boolean"
          },
          "lists": {
            "type": "boolean"
          }
        }
      },
      "UserCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "spaces": {
            "type": "boolean"
          },
          "lists": {
            "type": "boolean"
          },
          "todos": {
            "type": "boolean"
          },
          "ownedSpaces": {
            "type": "boolean"
          }
        }
      },
      "ListCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "todos": {
            "type": "boolean"
          }
        }
      },
      "SpaceCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceCountOutputTypeSelect"
          }
        }
      },
      "UserCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserCountOutputTypeSelect"
          }
        }
      },
      "ListCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListCountOutputTypeSelect"
          }
        }
      },
      "SpaceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "slug": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "ownerId": {
            "type": "boolean"
          },
          "members": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserFindManyArgs"
              }
            ]
          },
          "lists": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "SpaceUserSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "space": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceArgs"
              }
            ]
          },
          "spaceId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "userId": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          }
        }
      },
      "UserSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "spaces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserFindManyArgs"
              }
            ]
          },
          "lists": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListFindManyArgs"
              }
            ]
          },
          "todos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoFindManyArgs"
              }
            ]
          },
          "ownedSpaces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ListSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "space": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceArgs"
              }
            ]
          },
          "spaceId": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "ownerId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          },
          "todos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "TodoSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "owner": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "ownerId": {
            "type": "boolean"
          },
          "list": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListArgs"
              }
            ]
          },
          "listId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          }
        }
      },
      "SpaceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "slug": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "SpaceAvgAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "SpaceSumAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "SpaceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "slug": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "SpaceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "slug": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "SpaceUserCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "SpaceUserAvgAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "SpaceUserSumAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "SpaceUserMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          }
        }
      },
      "SpaceUserMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          }
        }
      },
      "UserCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "UserAvgAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          }
        }
      },
      "UserSumAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          }
        }
      },
      "UserMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          }
        }
      },
      "UserMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          }
        }
      },
      "ListCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ListAvgAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "ListSumAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          }
        }
      },
      "ListMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          }
        }
      },
      "ListMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "spaceId": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          }
        }
      },
      "TodoCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "listId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "TodoAvgAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "listId": {
            "type": "boolean"
          }
        }
      },
      "TodoSumAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "listId": {
            "type": "boolean"
          }
        }
      },
      "TodoMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "listId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          }
        }
      },
      "TodoMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "ownerId": {
            "type": "boolean"
          },
          "listId": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "boolean"
          }
        }
      },
      "AggregateSpace": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "SpaceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "ownerId"
        ]
      },
      "AggregateSpaceUser": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "SpaceUserGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spaceId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "role": {
            "type": "string"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/SpaceUserMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "userId",
          "role"
        ]
      },
      "AggregateUser": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "UserGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/UserMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "email"
        ]
      },
      "AggregateList": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "ListGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "spaceId": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ListMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "ownerId",
          "title",
          "private"
        ]
      },
      "AggregateTodo": {
        "type": "object",
        "properties": {
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoMaxAggregateOutputType"
              }
            ]
          }
        }
      },
      "TodoGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "integer"
          },
          "listId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoCountAggregateOutputType"
              }
            ]
          },
          "_avg": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoAvgAggregateOutputType"
              }
            ]
          },
          "_sum": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoSumAggregateOutputType"
              }
            ]
          },
          "_min": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoMinAggregateOutputType"
              }
            ]
          },
          "_max": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/TodoMaxAggregateOutputType"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "ownerId",
          "listId",
          "title"
        ]
      },
      "SpaceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "slug": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "ownerId",
          "_all"
        ]
      },
      "SpaceAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "SpaceSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "slug": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceUserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "spaceId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "userId",
          "role",
          "_all"
        ]
      },
      "SpaceUserAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "SpaceUserSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "SpaceUserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SpaceUserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "email": {
            "type": "integer"
          },
          "password": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "email",
          "password",
          "name",
          "_all"
        ]
      },
      "UserAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "UserSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "UserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ListCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "spaceId": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "private": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "spaceId",
          "ownerId",
          "title",
          "private",
          "_all"
        ]
      },
      "ListAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ListSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "ListMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ListMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "spaceId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "private": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "TodoCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "ownerId": {
            "type": "integer"
          },
          "listId": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "completedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "ownerId",
          "listId",
          "title",
          "completedAt",
          "_all"
        ]
      },
      "TodoAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "TodoSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        }
      },
      "TodoMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "TodoMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "ownerId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "listId": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "completedAt": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "_Meta": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Meta information about the request or response",
            "properties": {
              "serialization": {
                "description": "Serialization metadata"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "_Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "prisma": {
                "type": "boolean",
                "description": "Indicates if the error occurred during a Prisma call"
              },
              "rejectedByPolicy": {
                "type": "boolean",
                "description": "Indicates if the error was due to rejection by a policy"
              },
              "code": {
                "type": "string",
                "description": "Prisma error code. Only available when \"prisma\" field is true."
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "reason": {
                "type": "string",
                "description": "Detailed error reason"
              },
              "zodErrors": {
                "type": "object",
                "additionalProperties": true,
                "description": "Zod validation errors if the error is due to data validation failure"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "BatchPayload": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "SpaceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/SpaceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/SpaceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SpaceOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/SpaceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SpaceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SpaceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SpaceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SpaceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SpaceOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/SpaceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SpaceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SpaceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SpaceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SpaceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceUserCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceUserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/SpaceUserUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/SpaceUserCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/SpaceUserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SpaceUserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SpaceUserSelect"
          },
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SpaceUserOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/SpaceUserWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SpaceUserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SpaceUserMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SpaceUserSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SpaceUserAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SpaceUserGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SpaceUserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SpaceUserOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/SpaceUserScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SpaceUserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SpaceUserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SpaceUserMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/SpaceUserSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/SpaceUserAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "data": {
            "$ref": "#/components/schemas/UserCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/UserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/UserUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/UserCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/UserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/UserSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/UserAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/UserOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/UserScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/UserSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/UserAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ListCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ListUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ListUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ListCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ListUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ListInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ListSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ListOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ListWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ListMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ListMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ListSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ListAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ListGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ListWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ListOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/ListScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ListScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ListCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ListMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ListMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ListSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ListAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "data": {
            "$ref": "#/components/schemas/TodoCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/TodoUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/TodoUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/TodoCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/TodoUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/TodoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/TodoSelect"
          },
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/TodoOrderByWithRelationInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/TodoWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/TodoMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/TodoMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/TodoSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/TodoAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "TodoGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/TodoWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/TodoOrderByWithRelationInput"
          },
          "by": {
            "$ref": "#/components/schemas/TodoScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/TodoScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/TodoCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/TodoMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/TodoMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/TodoSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/TodoAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      }
    }
  },
  "paths": {
    "/space/create": {
      "post": {
        "operationId": "createSpace",
        "description": "Create a new Space",
        "tags": [
          "space"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/space/findUnique": {
      "get": {
        "operationId": "findUniqueSpace",
        "description": "Find one unique Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/findFirst": {
      "get": {
        "operationId": "findFirstSpace",
        "description": "Find the first Space matching the given condition",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/findMany": {
      "get": {
        "operationId": "findManySpace",
        "description": "Find a list of Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Space"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/update": {
      "patch": {
        "operationId": "updateSpace",
        "description": "Update a Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/space/updateMany": {
      "patch": {
        "operationId": "updateManySpace",
        "description": "Update Spaces matching the given condition",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/space/upsert": {
      "post": {
        "operationId": "upsertSpace",
        "description": "Upsert a Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/space/delete": {
      "delete": {
        "operationId": "deleteSpace",
        "description": "Delete one unique Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Space",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/deleteMany": {
      "delete": {
        "operationId": "deleteManySpace",
        "description": "Delete Spaces matching the given condition",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/count": {
      "get": {
        "operationId": "countSpace",
        "description": "Find a list of Space",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SpaceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/aggregate": {
      "get": {
        "operationId": "aggregateSpace",
        "description": "Aggregate Spaces",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSpace",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/space/groupBy": {
      "get": {
        "operationId": "groupBySpace",
        "description": "Group Spaces by fields",
        "tags": [
          "space"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpaceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/create": {
      "post": {
        "operationId": "createSpaceUser",
        "description": "Create a new SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUserCreateArgs"
              }
            }
          }
        }
      }
    },
    "/spaceUser/findUnique": {
      "get": {
        "operationId": "findUniqueSpaceUser",
        "description": "Find one unique SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/findFirst": {
      "get": {
        "operationId": "findFirstSpaceUser",
        "description": "Find the first SpaceUser matching the given condition",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/findMany": {
      "get": {
        "operationId": "findManySpaceUser",
        "description": "Find a list of SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpaceUser"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/update": {
      "patch": {
        "operationId": "updateSpaceUser",
        "description": "Update a SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUserUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/spaceUser/updateMany": {
      "patch": {
        "operationId": "updateManySpaceUser",
        "description": "Update SpaceUsers matching the given condition",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUserUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/spaceUser/upsert": {
      "post": {
        "operationId": "upsertSpaceUser",
        "description": "Upsert a SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceUserUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/spaceUser/delete": {
      "delete": {
        "operationId": "deleteSpaceUser",
        "description": "Delete one unique SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/SpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/deleteMany": {
      "delete": {
        "operationId": "deleteManySpaceUser",
        "description": "Delete SpaceUsers matching the given condition",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/count": {
      "get": {
        "operationId": "countSpaceUser",
        "description": "Find a list of SpaceUser",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SpaceUserCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/aggregate": {
      "get": {
        "operationId": "aggregateSpaceUser",
        "description": "Aggregate SpaceUsers",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSpaceUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/spaceUser/groupBy": {
      "get": {
        "operationId": "groupBySpaceUser",
        "description": "Group SpaceUsers by fields",
        "tags": [
          "spaceUser"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SpaceUserGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceUserGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/create": {
      "post": {
        "operationId": "createUser",
        "description": "Create a new User",
        "tags": [
          "user"
        ],
        "security": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateArgs"
              }
            }
          }
        }
      }
    },
    "/user/findUnique": {
      "get": {
        "operationId": "findUniqueUser",
        "description": "Find one unique User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/findFirst": {
      "get": {
        "operationId": "findFirstUser",
        "description": "Find the first User matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/findMany": {
      "get": {
        "operationId": "findManyUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/update": {
      "patch": {
        "operationId": "updateUser",
        "description": "Update a User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/user/updateMany": {
      "patch": {
        "operationId": "updateManyUser",
        "description": "Update Users matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/user/upsert": {
      "post": {
        "operationId": "upsertUser",
        "description": "Upsert a User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/user/delete": {
      "delete": {
        "operationId": "deleteUser",
        "description": "Delete one unique User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/deleteMany": {
      "delete": {
        "operationId": "deleteManyUser",
        "description": "Delete Users matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/count": {
      "get": {
        "operationId": "countUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/UserCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/aggregate": {
      "get": {
        "operationId": "aggregateUser",
        "description": "Aggregate Users",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/user/groupBy": {
      "get": {
        "operationId": "groupByUser",
        "description": "Group Users by fields",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/create": {
      "post": {
        "operationId": "createList",
        "description": "Create a new List",
        "tags": [
          "list"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreateArgs"
              }
            }
          }
        }
      }
    },
    "/list/findUnique": {
      "get": {
        "operationId": "findUniqueList",
        "description": "Find one unique List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/findFirst": {
      "get": {
        "operationId": "findFirstList",
        "description": "Find the first List matching the given condition",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/findMany": {
      "get": {
        "operationId": "findManyList",
        "description": "Find a list of List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/List"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/update": {
      "patch": {
        "operationId": "updateList",
        "description": "Update a List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/list/updateMany": {
      "patch": {
        "operationId": "updateManyList",
        "description": "Update Lists matching the given condition",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/list/upsert": {
      "post": {
        "operationId": "upsertList",
        "description": "Upsert a List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/list/delete": {
      "delete": {
        "operationId": "deleteList",
        "description": "Delete one unique List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/List",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/deleteMany": {
      "delete": {
        "operationId": "deleteManyList",
        "description": "Delete Lists matching the given condition",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/count": {
      "get": {
        "operationId": "countList",
        "description": "Find a list of List",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ListCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/aggregate": {
      "get": {
        "operationId": "aggregateList",
        "description": "Aggregate Lists",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateList",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/list/groupBy": {
      "get": {
        "operationId": "groupByList",
        "description": "Group Lists by fields",
        "tags": [
          "list"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/create": {
      "post": {
        "operationId": "createTodo",
        "description": "Create a new Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoCreateArgs"
              }
            }
          }
        }
      }
    },
    "/todo/findUnique": {
      "get": {
        "operationId": "findUniqueTodo",
        "description": "Find one unique Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/findFirst": {
      "get": {
        "operationId": "findFirstTodo",
        "description": "Find the first Todo matching the given condition",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/findMany": {
      "get": {
        "operationId": "findManyTodo",
        "description": "Find a list of Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Todo"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/update": {
      "patch": {
        "operationId": "updateTodo",
        "description": "Update a Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/todo/updateMany": {
      "patch": {
        "operationId": "updateManyTodo",
        "description": "Update Todos matching the given condition",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/todo/upsert": {
      "post": {
        "operationId": "upsertTodo",
        "description": "Upsert a Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/todo/delete": {
      "delete": {
        "operationId": "deleteTodo",
        "description": "Delete one unique Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Todo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/deleteMany": {
      "delete": {
        "operationId": "deleteManyTodo",
        "description": "Delete Todos matching the given condition",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/count": {
      "get": {
        "operationId": "countTodo",
        "description": "Find a list of Todo",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/TodoCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/aggregate": {
      "get": {
        "operationId": "aggregateTodo",
        "description": "Aggregate Todos",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateTodo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/todo/groupBy": {
      "get": {
        "operationId": "groupByTodo",
        "description": "Group Todos by fields",
        "tags": [
          "todo"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TodoGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    }
  }
}