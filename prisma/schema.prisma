//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator js {
  provider = "prisma-client-js"
}

model Space {
  id        Int         @id() @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt()
  name      String
  slug      String      @unique()
  owner     User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   Int
  members   SpaceUser[]
  lists     List[]
}

model SpaceUser {
  id        Int      @id() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  space     Space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId   Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  role      String   @default("USER")

  @@unique([userId, spaceId])
}

model User {
  id          Int         @id() @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt()
  email       String      @unique()
  password    String?
  name        String?
  spaces      SpaceUser[]
  lists       List[]
  todos       Todo[]
  ownedSpaces Space[]
}

model List {
  id        Int      @id() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  space     Space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId   Int
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   Int
  title     String
  private   Boolean  @default(false)
  todos     Todo[]
}

model Todo {
  id          Int       @id() @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  owner       User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     Int
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId      Int
  title       String
  completedAt DateTime?
}
